{"version":3,"sources":["webpack:///webpack/bootstrap d934ae09d387701eab56","webpack:///./lib/util.js","webpack:///./lib/sword.js","webpack:///./lib/tloz.js","webpack:///./lib/game.js","webpack:///./lib/link.js","webpack:///./lib/enemy.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;AC7DA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA,GAAG;AACH;;;;AAIA;;;;;;;ACfA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;;;;;;ACrEA;;AAEA,gBAAgB;;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;ACdD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,eAAe;AACpD,qCAAqC,0BAA0B;AAC/D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,qBAAqB;AACxC;AACA;AACA;AACA,qCAAqC,eAAe;AACpD,qCAAqC,0BAA0B;AAC/D;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,sBAAsB;AAC5D,sCAAsC,eAAe;AACrD;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;;AAEA;AACA;AACA;;AAEA;AACA,+BAA+B,oBAAoB;AACnD,+BAA+B,QAAQ;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,sBAAsB;AAC5D;AACA,sCAAsC,eAAe;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,uBAAuB;AAC1C,qBAAqB,uBAAuB;AAC5C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;;;;;;;ACnzHA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA","file":"./lib/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap d934ae09d387701eab56","const Util = {\n  dist(pos1, pos2) {\n    return Math.sqrt(\n      Math.pow(pos1[0] - pos2[0], 2) + Math.pow(pos1[1] - pos2[1], 2)\n    );\n  },\n  times(n, iterator) {\n    let accum = Array(Math.max(0, n));\n    for (let i = 0; i < n; i++) accum[i] = iterator.call();\n    return accum;\n  },\n};\n\n\n\nmodule.exports = Util;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/util.js\n// module id = 0\n// module chunks = 0","const Util = require('./util');\n\nclass Sword {\n  constructor(ctx, link, doc) {\n    this.height = 23;\n    this.width = 23;\n    this.xCoord = 0;\n    this.yCoord = 0;\n    this.ctx = ctx;\n    this.link = link;\n    this.doc = doc;\n    this.imgUp = new Image();\n    this.imgDown = new Image();\n    this.imgLeft = new Image();\n    this.imgRight = new Image();\n    this.imgUp.src = \"./assets/sword-up.png\";\n    this.imgDown.src = \"./assets/sword-down.png\";\n    this.imgLeft.src = \"./assets/sword-left.png\";\n    this.imgRight.src = \"./assets/sword-right.png\";\n    this.radius = this.height / 2;\n    this.pos = [];\n  }\n\n  isCollidedWith(otherObject) {\n    if (this.pos && otherObject.pos) {\n      const centerDist = Util.dist(this.pos, otherObject.pos);\n      return centerDist < (this.radius + otherObject.radius);\n    }\n  }\n\n\n\n  attack(direction) {\n    let linkX = this.link.xCoord;\n    let linkY = this.link.yCoord;\n    let swordH = this.height;\n    let swordW = this.width;\n    let clearSword = () => {\n      this.ctx.clearRect(linkX, linkY, swordH, swordW);\n    };\n    switch(direction) {\n      case 'up':\n        linkY -= 20;\n        this.ctx.drawImage(this.imgUp, linkX, linkY, swordH, swordW);\n      break;\n\n      case 'down':\n        linkY += 25;\n        this.ctx.drawImage(this.imgDown, linkX, linkY, swordH, swordW);\n      break;\n\n      case 'left':\n        linkX -= 20;\n        this.ctx.drawImage(this.imgLeft, linkX, linkY, swordH, swordW);\n      break;\n\n      case 'right':\n        linkX += 25;\n        this.ctx.drawImage(this.imgRight, linkX, linkY, swordH, swordW);\n      break;\n    }\n    this.pos = [linkX, linkY];\n    clearSword = clearSword.bind(this);\n    setTimeout( () => {\n      clearSword();\n    }, 10);\n  }\n}\n\n module.exports = Sword;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sword.js\n// module id = 1\n// module chunks = 0","const Game = require('./game');\n\n// mapLimits = { xCoord = 120, yCoord = 275 }\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const canvas = document.getElementById(\"myCanvas\");\n  const scoreCanvas = document.getElementById(\"count-canvas\");\n  const screenCanvas = document.getElementById(\"screen-canvas\");\n  const ctx = canvas.getContext(\"2d\");\n  const scoreCtx = scoreCanvas.getContext(\"2d\");\n  const screenCtx = screenCanvas.getContext(\"2d\");\n  const game = new Game(ctx, document, scoreCtx, screenCtx, screenCanvas);\n  game.drawWelcome();\n  window.game = game;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/tloz.js\n// module id = 2\n// module chunks = 0","const Link = require('./link');\nconst Enemy = require('./enemy');\nconst Sword = require('./sword');\nconst Util = require('./util');\n\nclass Game {\n  constructor(ctx, doc, scoreCtx, screenCtx, canvas) {\n    this.ctx = ctx;\n    this.doc = doc;\n    this.link = new Link(ctx, doc);\n    this.allObjects = [this.link, this.link.sword];\n    this.enemies = [];\n    this.timeEnemiesAdded = 0;\n    this.killCount = 0;\n    this.screenCtx = screenCtx;\n    this.scoreCtx = scoreCtx;\n    this.scoreCtx.font = '25px triforce';\n    this.scoreCtx.fillStyle = '#ffffff';\n    this.scoreCtx.fillText(`Score: ${this.killCount}`, 100, 50);\n    this.scoreCtx.fillText(`Level: ${this.timeEnemiesAdded + 1}`, 10, 50);\n    this.gameStarted = false;\n    this.moveEnemies = this.moveEnemies.bind(this);\n    this.reloadDocument = this.reloadDocument.bind(this);\n    this.bombs = 3;\n  }\n\n  addEnemy() {\n    const enemy = new Enemy(this.ctx, this.doc, this, 300);\n    this.allObjects.push(enemy);\n    this.enemies.push(enemy);\n    enemy.setup();\n    console.log(\"enemy added\");\n  }\n\n  addEnemies() {\n    const rangeArr = new Array(this.timeEnemiesAdded + 1);\n    for (let i = 0; i < rangeArr.length; i++) {\n      this.addEnemy();\n    }\n    this.scoreCtx.clearRect(0,0,800,800);\n    this.scoreCtx.fillText(`Score: ${this.killCount}`, 100, 50);\n    this.scoreCtx.fillText(`Level: ${this.timeEnemiesAdded + 1}`, 10, 50);\n    this.timeEnemiesAdded++;\n  }\n\n  removeAllEnemies() {\n    this.allObjects.forEach((obj, idx) => {\n      if (obj instanceof Enemy) {\n        console.log(\"enemy removed\");\n        this.allObjects.splice(idx, 1);\n        obj.killEnemy();\n      }\n    });\n    this.enemies = [];\n  }\n\n  moveEnemies() {\n    let enemyPosArr = [];\n    const positionEnemy = (enemy) => {\n      let pos = enemy.getNextPos();\n      enemyPosArr.forEach((pos) => {\n        if (enemy.posCollidesWith(pos)){\n          return positionEnemy(enemy);\n        }\n      });\n      enemy.moveTo(pos);\n      enemyPosArr.push(pos);\n    };\n\n    this.enemies.forEach((enemy) => {\n      positionEnemy(enemy);\n    });\n\n    this.checkCollisions();\n  }\n\n  animationFrameLoop () {\n    window.requestAnimationFrame(() => {\n      this.moveEnemies();\n    });\n  }\n\n  handleAudioToggle() {\n    let audioTag = this.doc.getElementById(\"player\");\n    let audioBtn = this.doc.getElementById(\"audio-btn\");\n    if (audioBtn.innerText === \"Audio: on\") {\n      audioBtn.innerText = \"Audio: off\";\n      audioTag.pause();\n    } else {\n      audioBtn.innerText = \"Audio: on\";\n      audioTag.play();\n    }\n  }\n\n\n  setup() {\n    if (this.enemyMoveTimeout) {\n      clearInterval(this.enemyMoveTimeout);\n    }\n    this.gameStarted = true;\n    this.screenCtx.clearRect(0, 0, 615, 403);\n    this.link.setup();\n    this.addEnemies();\n\n\n    this.enemyMoveInterval = setInterval(this.animationFrameLoop.bind(this), 400);\n   }\n\n   drawWelcome(){\n     this.setupListeners();\n     this.screenCtx.fillStyle = '#ffffff';\n     this.screenCtx.font = \"20px triforce\";\n     this.screenCtx.fillText(\"Press ENTER to start\", 60, 80);\n   }\n\n   handleGameOver() {\n     this.removeAllEnemies();\n     clearInterval(this.enemyMoveInterval);\n     this.link.clearLink();\n     this.link.resetLink();\n     this.timeEnemiesAdded = 0;\n     this.killCount = 0;\n     this.scoreCtx.clearRect(0, 0, 800, 800);\n     this.scoreCtx.fillText(`Level: ${this.timeEnemiesAdded}`, 10, 50);\n     this.scoreCtx.fillText(`Score: ${this.killCount}`, 100,50);\n     this.ctx.clearRect(0, 0, 120, 275);\n     this.screenCtx.font = '45px triforce';\n     this.screenCtx.fillText(\"Game Over\", 40, 70);\n     this.screenCtx.font = '18px triforce';\n     setInterval(() => {\n       this.reloadDocument();\n     }, 2000);\n   }\n\n   reloadDocument() {\n     this.doc.location.reload();\n   }\n\n   handleSwordHit(obj, idx) {\n     console.log(`sword pos: ${this.link.sword.pos}`);\n     console.log(`enemy pos: ${obj.pos}`);\n     this.enemies = this.enemies.filter((enemy) => enemy !== obj);\n     obj.clearEnemy();\n     obj.killEnemy();\n     this.link.sword.pos = [];\n     obj.alive = false;\n     this.allObjects.splice(idx, 1);\n     this.scoreCtx.clearRect(0, 0, 800, 800);\n     this.scoreCtx.fillText(`Level: ${this.timeEnemiesAdded}`, 10, 50);\n     this.killCount++;\n     this.scoreCtx.fillText(`Score: ${this.killCount}`, 100, 50);\n     if (this.allObjects.length <= 2) {\n       clearInterval(this.enemyMoveInterval);\n       this.removeAllEnemies();\n       this.ctx.clearRect(0,0, 120, 275);\n       this.link.clearLink();\n       this.link.xCoord = 0;\n       this.link.yCoord = 0;\n       this.link.drawLink();\n       this.addEnemies();\n       this.enemyMoveInterval = setInterval(this.animationFrameLoop.bind(this), 200);\n     }\n   }\n\n\n  handleKeyDown(event) {\n    switch(event.keyCode) {\n      case 13:\n      if (!this.gameStarted) {\n        this.screenCtx.clearRect(0, 0, 615, 403);\n        this.ctx.clearRect(0, 0, 615, 403);\n        this.setup();\n      }\n      break;\n      case 87:\n        this.link.keyUp = true;\n        break;\n      case 83:\n        this.link.keyDown = true;\n        break;\n      case 65:\n        this.link.keyLeft = true;\n        break;\n      case 68:\n        this.link.keyRight = true;\n        break;\n      case 38:\n        event.preventDefault();\n        this.link.keyUpAtk = true;\n        break;\n      case 40:\n        event.preventDefault();\n        this.link.keyDownAtk = true;\n        break;\n      case 37:\n        this.link.keyLeftAtk =  true;\n        break;\n      case 39:\n        this.link.keyRightAtk = true;\n        break;\n    }\n    this.checkCollisions();\n  }\n\n  handleKeyUp(event) {\n    switch(event.keyCode) {\n      case 87:\n       this.link.keyUp = false;\n        break;\n      case 83:\n        this.link.keyDown = false;\n        break;\n      case 65:\n        this.link.keyLeft = false;\n        break;\n      case 68:\n       this.link.keyRight = false;\n        break;\n      case 38:\n        event.preventDefault();\n        this.link.keyUpAtk = false;\n        break;\n      case 40:\n        event.preventDefault();\n        this.link.keyDownAtk = false;\n        break;\n      case 37:\n        this.link.keyLeftAtk = false;\n        break;\n      case 39:\n        this.link.keyRightAtk = false;\n        break;\n    }\n    this.checkCollisions();\n  }\n\n  setupListeners() {\n    this.doc.addEventListener('keydown', this.handleKeyDown.bind(this), true);\n    this.doc.addEventListener('keyup', this.handleKeyUp.bind(this), true);\n\n    let audioBtn = this.doc.getElementById(\"audio-btn\");\n    let audioTag = this.doc.getElementById(\"player\");\n    audioTag.volume = 0.5;\n    audioBtn.addEventListener('click', this.handleAudioToggle.bind(this), true);\n  }\n\n  checkCollisions() {\n    const allObjects = this.allObjects;\n    for (let i = 0; i < allObjects.length; i++) {\n      for (let j = 0; j < allObjects.length; j++) {\n        if (i === j) {\n          continue;\n        }\n        const obj1 = allObjects[i];\n        const obj2 = allObjects[j];\n\n        if (obj1.isCollidedWith(obj2)) {\n          if (obj1 instanceof Sword && obj2 instanceof Enemy) {\n            this.handleSwordHit(obj2, j);\n          } else if (obj1 instanceof Enemy && obj2 instanceof Sword) {\n            this.handleSwordHit(obj1, i);\n          }\n          else if (obj1 instanceof Link && obj2 instanceof Enemy) {\n            this.handleGameOver();\n          } else if (obj2 instanceof Enemy && obj1 instanceof Link) {\n            this.handleGameOver();\n          }\n        }\n      }\n    }\n  }\n}\n\n\n\nmodule.exports = Game;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/game.js\n// module id = 3\n// module chunks = 0","const Sword = require('./sword');\nconst Util = require('./util');\n\nclass Link {\n  constructor(ctx, doc) {\n    this.xCoord = 0;\n    this.yCoord = 0;\n    this.height = 25;\n    this.width = 25;\n    this.ctx = ctx;\n    this.doc = doc;\n    this.img = new Image();\n    this.img.src = './assets/link.png';\n    this.sword = new Sword(ctx, this, doc);\n    this.keyUp = false;\n    this.keyDown = false;\n    this.keyLeft = false;\n    this.keyRight = false;\n    this.keyUpAtk = false;\n    this.keyDownAtk = false;\n    this.keyLeftAtk = false;\n    this.keyRightAtk = false;\n    this.radius = this.height / 2;\n    this.alive = true;\n    this.pos = [this.xCoord, this.yCoord];\n    this.drawLink = this.drawLink.bind(this);\n  }\n\n  resetLink() {\n    clearInterval(this.moveInterval);\n    this.clearLink();\n    this.xCoord = 0;\n    this.yCoord = 0;\n    this.keyUp = false;\n    this.keyDown = false;\n    this.keyLeft = false;\n    this.keyRight = false;\n    this.keyUpAtk = false;\n    this.keyDownAtk = false;\n    this.keyLeftAtk = false;\n    this.keyRightAtk = false;\n    this.alive = false;\n    this.pos = [];\n  }\n\n  setup() {\n    this.alive = true;\n    this.drawLink();\n    this.moveInterval = setInterval(this.move.bind(this), 0);\n  }\n\n  isCollidedWith(otherObject) {\n    if (this.pos && otherObject.pos) {\n      const centerDist = Util.dist(this.pos, otherObject.pos);\n      return centerDist < (this.radius + otherObject.radius);\n    }\n  }\n\n  drawLink(){\n    this.ctx.drawImage(this.img, this.xCoord, this.yCoord, this.height, this.width);\n  }\n\n  clearLink(){\n    this.ctx.clearRect(this.xCoord, this.yCoord, this.height, this.width);\n  }\n\n  move(){\n    if (this.alive) {\n      if (this.keyUp) {\n        if (this.yCoord - 1 > 0) {\n          this.clearLink();\n          this.yCoord -= 0.35;\n          this.drawLink();\n        }\n      }\n\n      if (this.keyDown) {\n        if (this.yCoord + 1 < 120) {\n          this.clearLink();\n          this.yCoord += 0.35;\n          this.drawLink();\n        }\n      }\n\n      if (this.keyLeft) {\n        if (this.xCoord - 1 > 0) {\n          this.clearLink();\n          this.xCoord -= 0.35;\n          this.drawLink();\n        }\n      }\n\n      if (this.keyRight) {\n        if (this.xCoord + 1 < 275) {\n          this.clearLink();\n          this.xCoord += 0.35;\n          this.drawLink();\n        }\n      }\n\n      if (this.keyUpAtk) {\n        this.sword.attack('up');\n      }\n\n      if (this.keyDownAtk) {\n        this.sword.attack('down');\n      }\n\n      if (this.keyLeftAtk) {\n        this.sword.attack('left');\n      }\n\n      if (this.keyRightAtk) {\n        this.sword.attack('right');\n      }\n      this.pos = [this.xCoord, this.yCoord];\n    } else {\n      this.clearLink();\n    }\n  }\n}\nmodule.exports = Link;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/link.js\n// module id = 4\n// module chunks = 0","const Util = require('./util');\n\nclass Enemy {\n  constructor(ctx, doc, game, speed) {\n    this.xCoord = Math.random() * (275 - 30) + 30;\n    this.yCoord = Math.random() * (100 - 30) + 30;\n    this.height = 15;\n    this.width = 15;\n    this.img = new Image();\n    this.img.src = './assets/oktorok.png';\n    this.ctx = ctx;\n    this.doc = doc;\n    this.alive = true;\n    this.game = game;\n    this.speed = speed;\n    this.radius = this.height / 2;\n    this.pos = [this.xCoord, this.yCoord];\n    this.moveTo = this.moveTo.bind(this);\n  }\n\n  killEnemy() {\n    this.clearEnemy();\n    this.xCoord = 0;\n    this.yCoord = 0;\n    this.alive = false;\n    this.pos = [];\n  }\n\n  isCollidedWith(otherObject) {\n    if (this.pos && otherObject.pos) {\n      const centerDist = Util.dist(this.pos, otherObject.pos);\n      return centerDist < (this.radius + otherObject.radius);\n    }\n  }\n\n  posCollidesWith(pos) {\n    if (this.pos) {\n      const centerDist = Util.dist(this.pos, pos);\n      return centerDist < (15);\n    }\n  }\n\n\n  setup() {\n    this.drawEnemy();\n  }\n\n  drawEnemy(){\n    this.ctx.drawImage(this.img, this.xCoord, this.yCoord, this.height, this.width);\n  }\n\n  clearEnemy(){\n    this.ctx.clearRect(this.xCoord, this.yCoord, this.height, this.width);\n  }\n\n  moveTo(pos){\n    this.clearEnemy();\n    // debugger\n    this.xCoord = pos.x;\n    this.yCoord = pos.y;\n    this.pos = [this.xCoord, this.yCoord];\n    this.drawEnemy();\n  }\n\n  getNextPos() {\n      const distances = [-5, 5];\n      const moves = [\"up\", \"down\", \"left\", \"right\"];\n      const ranD = distances[Math.floor(Math.random()*distances.length)];\n      const ranM = moves[Math.floor(Math.random()*moves.length)];\n      const pos = {x: this.xCoord, y: this.yCoord};\n      switch(ranM) {\n        case \"up\":\n        if (this.yCoord - 5 > 0) {\n          pos.y -= 5;\n        }\n        break;\n        case \"down\":\n        if (this.yCoord + 5 < 120) {\n          pos.y += 5;\n        }\n        break;\n\n        case \"left\":\n        if (this.xCoord - 5 > 0) {\n          pos.x -= 5;\n        }\n        break;\n\n        case \"right\":\n        if (this.xCoord + 5 < 275) {\n          pos.x += 5;\n        }\n        break;\n      }\n      return pos;\n  }\n}\n\n\nmodule.exports = Enemy;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/enemy.js\n// module id = 5\n// module chunks = 0"],"sourceRoot":""}